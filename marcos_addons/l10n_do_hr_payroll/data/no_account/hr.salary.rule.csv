"id","active","appears_on_payslip","quantity","category_id/id","company_id/id","condition_select","condition_python","create_date","create_uid/id","account_credit/id","analytic_account_id/id","account_debit/id","code","account_tax_id/id","amount_python_compute","note","input_ids/id","amount_fix","condition_range","condition_range_max","condition_range_min","name","amount_percentage","amount_percentage_base","register_id/id","parent_rule_id/id","sequence","amount_select","write_uid/id","write_date"
hr_payroll.hr_rule_basic,True,True,1.0,hr_payroll.BASIC,base.main_company,"Siempre verdadero"," # Available variables: #---------------------- # payslip: object containing the payslips # employee: hr.employee object # contract: hr.contract object # rules: object containing the rules code (previously computed) # categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category). # worked_days: object containing the computed worked days # inputs: object containing the computed inputs  # Note: returned value have to be set in the variable 'result'  result = rules.NET > categories.NET * 0.10","2015-03-01 22:23:36",base.user_root,,,,BASIC,,"if contract.schedule_pay == 'monthly':
    result = contract.wage
elif contract.schedule_pay == 'bi-monthly':
    result = contract.wage / 2
elif contract.schedule_pay == 'weekly':
    result = contract.wage / 4
else:
    result = contract.wage",,,,contract.wage,,,"Sueldo base",,,,,1,"Código python",base.user_root,"2015-03-03 02:21:53"
"hr_payroll.hr_rule_taxable","True","True","1.0","hr_payroll.GROSS","base.main_company","Siempre verdadero"," # Available variables: #---------------------- # payslip: object containing the payslips # employee: hr.employee object # contract: hr.contract object # rules: object containing the rules code (previously computed) # categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category). # worked_days: object containing the computed worked days # inputs: object containing the computed inputs  # Note: returned value have to be set in the variable 'result'  result = rules.NET > categories.NET * 0.10","2015-03-01 22:23:36","base.user_root","","","","GROSS","","result = categories.BASIC + categories.ALW + categories.ALWND ","","","","contract.wage","","","Sueldo mas incentivos","","","","","2","Código python","base.user_root","2015-03-03 02:45:41"
"hr_payroll.hr_rule_net","True","True","1.0","hr_payroll.NET","base.main_company","Siempre verdadero"," # Available variables: #---------------------- # payslip: object containing the payslips # employee: hr.employee object # contract: hr.contract object # rules: object containing the rules code (previously computed) # categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category). # worked_days: object containing the computed worked days # inputs: object containing the computed inputs  # Note: returned value have to be set in the variable 'result'  result = rules.NET > categories.NET * 0.10","2015-03-01 22:23:36","base.user_root","","","","NET","","result = (categories.BASIC + categories.ALW ) - (categories.DED + categories.RETRIBD + categories.RETRIB)","","","","contract.wage","","","Total devangado","","","hr_payroll.contrib_register_employees","","200","Código python","base.user_root","2015-03-03 02:45:13"
"__export__.hr_salary_rule_4","True","True","1.0","__export__.hr_salary_rule_category_8","base.main_company","Siempre verdadero"," # Available variables: #---------------------- # payslip: object containing the payslips # employee: hr.employee object # contract: hr.contract object # rules: object containing the rules code (previously computed) # categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category). # worked_days: object containing the computed worked days # inputs: object containing the computed inputs  # Note: returned value have to be set in the variable 'result'  result = rules.NET > categories.NET * 0.10","2015-03-01 22:52:18","base.user_root","","","","SFS","","result = ((categories.BASIC)+categories.ALW)*0.0304 ","","","","contract.wage","","","Seguro familiar de salud","","","","","3","Código python","base.user_root","2015-03-03 02:23:19"
__export__.hr_salary_rule_5,True,True,1.0,__export__.hr_salary_rule_category_8,base.main_company,"Siempre verdadero"," # Available variables: #---------------------- # payslip: object containing the payslips # employee: hr.employee object # contract: hr.contract object # rules: object containing the rules code (previously computed) # categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category). # worked_days: object containing the computed worked days # inputs: object containing the computed inputs  # Note: returned value have to be set in the variable 'result'  result = rules.NET > categories.NET * 0.10","2015-03-01 22:58:24",base.user_root,,,,AFP,,"
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.

# Note: returned value have to be set in the variable 'result'

result = (categories.BASIC+categories.ALW)*0.0287",,,,contract.wage,,,"Fondo de pensiones",,,,,5,"Código python",base.user_root,"2015-03-03 02:23:33"
__export__.hr_salary_rule_6,True,False,1.0,hr_payroll.COMP,base.main_company,"Siempre verdadero"," # Available variables: #---------------------- # payslip: object containing the payslips # employee: hr.employee object # contract: hr.contract object # rules: object containing the rules code (previously computed) # categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category). # worked_days: object containing the computed worked days # inputs: object containing the computed inputs  # Note: returned value have to be set in the variable 'result'  result = rules.NET > categories.NET * 0.10","2015-03-01 23:00:14",base.user_root,,,,SFS-AE,,"
# Available variables:
#----------------------
# payslip: object containing the payslips
# employee: hr.employee object
# contract: hr.contract object
# rules: object containing the rules code (previously computed)
# categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category).
# worked_days: object containing the computed worked days.
# inputs: object containing the computed inputs.

# Note: returned value have to be set in the variable 'result'

result = (categories.BASIC + categories.ALW)*0.0709
",,,,contract.wage,,,"Seguro familiar de salud",,,,,4,"Código python",base.user_root,"2015-03-03 02:23:58"
"__export__.hr_salary_rule_7","True","False","1.0","hr_payroll.COMP","base.main_company","Siempre verdadero"," # Available variables: #---------------------- # payslip: object containing the payslips # employee: hr.employee object # contract: hr.contract object # rules: object containing the rules code (previously computed) # categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category). # worked_days: object containing the computed worked days # inputs: object containing the computed inputs  # Note: returned value have to be set in the variable 'result'  result = rules.NET > categories.NET * 0.10","2015-03-01 23:01:01","base.user_root","","","","AFP-AE","","result = ((categories.BASIC)+categories.ALW)*0.0710","","","","contract.wage","","","Fondo de pensiones","","","","","6","Código python","base.user_root","2015-03-03 02:25:26"
"__export__.hr_salary_rule_8","True","False","1.0","hr_payroll.COMP","base.main_company","Siempre verdadero"," # Available variables: #---------------------- # payslip: object containing the payslips # employee: hr.employee object # contract: hr.contract object # rules: object containing the rules code (previously computed) # categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category). # worked_days: object containing the computed worked days # inputs: object containing the computed inputs  # Note: returned value have to be set in the variable 'result'  result = rules.NET > categories.NET * 0.10","2015-03-01 23:02:54","base.user_root","","","","RL-AE","","result = ((categories.BASIC)+categories.ALW)*0.0115","","","","contract.wage","","","Riegos laboral","","","","","7","Código python","base.user_root","2015-03-03 02:25:16"
"__export__.hr_salary_rule_9","True","False","1.0","hr_payroll.COMP","base.main_company","Siempre verdadero"," # Available variables: #---------------------- # payslip: object containing the payslips # employee: hr.employee object # contract: hr.contract object # rules: object containing the rules code (previously computed) # categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category). # worked_days: object containing the computed worked days # inputs: object containing the computed inputs  # Note: returned value have to be set in the variable 'result'  result = rules.NET > categories.NET * 0.10","2015-03-01 23:06:36","base.user_root","","","","INF-AE","","result = ((categories.BASIC)+categories.ALW)*0.01","","","","contract.wage","","","Infotep","","","","","9","Código python","base.user_root","2015-03-03 02:18:35"
"__export__.hr_salary_rule_10","True","False","1.0","__export__.hr_salary_rule_category_7","base.main_company","Siempre verdadero"," # Available variables: #---------------------- # payslip: object containing the payslips # employee: hr.employee object # contract: hr.contract object # rules: object containing the rules code (previously computed) # categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category). # worked_days: object containing the computed worked days # inputs: object containing the computed inputs  # Note: returned value have to be set in the variable 'result'  result = rules.NET > categories.NET * 0.10","2015-03-01 23:07:44","base.user_root","","","","ISR",""," # Available variables: #---------------------- # payslip: object containing the payslips # employee: hr.employee object # contract: hr.contract object # rules: object containing the rules code (previously computed) # categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category). # worked_days: object containing the computed worked days. # inputs: object containing the computed inputs.  # Note: returned value have to be set in the variable 'result'  result = contract.wage * 0.10","","","","contract.wage","","","Impuesto sobre la renta","","","","","10","Importe fijo","base.user_root","2015-03-03 02:33:12"
"__export__.hr_salary_rule_11","True","False","1.0","__export__.hr_salary_rule_category_9","base.main_company","Siempre verdadero"," # Available variables: #---------------------- # payslip: object containing the payslips # employee: hr.employee object # contract: hr.contract object # rules: object containing the rules code (previously computed) # categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category). # worked_days: object containing the computed worked days # inputs: object containing the computed inputs  # Note: returned value have to be set in the variable 'result'  result = rules.NET > categories.NET * 0.10","2015-03-01 23:08:24","base.user_root","","","","HE",""," # Available variables: #---------------------- # payslip: object containing the payslips # employee: hr.employee object # contract: hr.contract object # rules: object containing the rules code (previously computed) # categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category). # worked_days: object containing the computed worked days. # inputs: object containing the computed inputs.  # Note: returned value have to be set in the variable 'result'  result = contract.wage * 0.10","","","","contract.wage","","","Horas extras","","","","","8","Importe fijo","base.user_root","2015-03-03 02:19:46"
__export__.hr_salary_rule_12,True,True,1.0,__export__.hr_salary_rule_category_7,base.main_company,"Expresión python","if contract.schedule_pay == 'monthly':
    # un año tiene 12 meses
    result = ((categories.GROSS - categories.RETRIBD)*12) <= 399923.00
elif contract.schedule_pay == 'bi-monthly':
    # un año tiene 24 quincenas
    result = ((categories.GROSS - categories.RETRIBD)*24) <= 399923.00
elif contract.schedule_pay == 'weekly':
    # un año tiene 48 semanas
    result = ((categories.GROSS - categories.RETRIBD)*48) <= 399923.00
else:
    # si no se conoce el sistema de pago, no tomar en cuenta esta regla.
    result = False
","2015-03-01 23:46:32",base.user_root,,,,ISR1,,,,,,contract.wage,,,"Impuesto sobre la renta",,,,__export__.hr_salary_rule_10,11,"Importe fijo",base.user_root,"2015-03-03 02:33:12"
__export__.hr_salary_rule_13,True,True,1.0,__export__.hr_salary_rule_category_7,base.main_company,"Expresión python","if contract.schedule_pay == 'monthly':
    # un año tiene 12 meses
    result = ((categories.GROSS - categories.RETRIBD)*12) > 399923.00 and ((categories.GROSS - categories.RETRIBD)*12) <= 599884.00
elif contract.schedule_pay == 'bi-monthly':
    # un año tiene 24 quincenas
    result = ((categories.GROSS - categories.RETRIBD)*24) > 399923.00 and ((categories.GROSS - categories.RETRIBD)*24) <= 599884.00
elif contract.schedule_pay == 'weekly':
    # un año tiene 48 semanas
    result = ((categories.GROSS - categories.RETRIBD)*48) > 399923.00 and ((categories.GROSS - categories.RETRIBD)*48) <= 599884.00
else:
    # si no se conoce el sistema de pago, no tomar en cuenta esta regla.
    result = False
","2015-03-01 23:46:32",base.user_root,,,,ISR2,,"factor = 0
if contract.schedule_pay == 'monthly':
    # un año tiene 12 meses
    factor = 12
elif contract.schedule_pay == 'bi-monthly':
    # un año tiene 24 quincenas
    factor = 24
elif contract.schedule_pay == 'weekly':
    # un año tiene 48 semanas
    factor = 48
else:
    # si no se conoce el sistema de pago, no tomar en cuenta esta regla.
    result = False

result = ((((categories.GROSS-categories.RETRIBD)*factor) - 399923.01) * 0.15) / factor
",,,,contract.wage,,,"Impuesto sobre la renta",,,,__export__.hr_salary_rule_10,12,"Código python",base.user_root,"2015-03-03 02:33:12"
__export__.hr_salary_rule_14,True,True,1.0,__export__.hr_salary_rule_category_7,base.main_company,"Expresión python","if contract.schedule_pay == 'monthly':
    # un año tiene 12 meses
    result = ((categories.GROSS - categories.RETRIBD)*12) > 599884.01 and ((categories.GROSS - categories.RETRIBD)*12) <= 833171.00
elif contract.schedule_pay == 'bi-monthly':
    # un año tiene 24 quincenas
    result = ((categories.GROSS - categories.RETRIBD)*24) > 599884.01 and ((categories.GROSS - categories.RETRIBD)*24) <= 833171.00
elif contract.schedule_pay == 'weekly':
    # un año tiene 48 semanas
    result = ((categories.GROSS - categories.RETRIBD)*48) > 599884.01 and ((categories.GROSS - categories.RETRIBD)*48) <= 833171.00
else:
    # si no se conoce el sistema de pago, no tomar en cuenta esta regla.
    result = False
","2015-03-02 00:23:40",base.user_root,,,,ISR3,,"factor = 0
if contract.schedule_pay == 'monthly':
    # un año tiene 12 meses
    factor = 12
elif contract.schedule_pay == 'bi-monthly':
    # un año tiene 24 quincenas
    factor = 24
elif contract.schedule_pay == 'weekly':
    # un año tiene 48 semanas
    factor = 48
else:
    # si no se conoce el sistema de pago, no tomar en cuenta esta regla.
    result = False

result = 29994.00 + ((((categories.GROSS - categories.RETRIBD )*factor) - 559884.01) * 0.20) / factor
",,,,contract.wage,,,"Impuesto sobre la renta",,,,__export__.hr_salary_rule_10,13,"Código python",base.user_root,"2015-03-03 02:33:12"
__export__.hr_salary_rule_15,True,True,1.0,__export__.hr_salary_rule_category_7,base.main_company,"Expresión python","if contract.schedule_pay == 'monthly':
    # un año tiene 12 meses
    result = ((categories.GROSS - categories.RETRIBD)*12) >= 833171.01
elif contract.schedule_pay == 'bi-monthly':
    # un año tiene 24 quincenas
    result = ((categories.GROSS - categories.RETRIBD)*24) >= 833171.01
elif contract.schedule_pay == 'weekly':
    # un año tiene 48 semanas
    result = ((categories.GROSS - categories.RETRIBD)*48) >= 833171.01
else:
    # si no se conoce el sistema de pago, no tomar en cuenta esta regla.
    result = False
","2015-03-02 00:23:40",base.user_root,,,,ISR4,,"factor = 0
if contract.schedule_pay == 'monthly':
    # un año tiene 12 meses
    factor = 12
elif contract.schedule_pay == 'bi-monthly':
    # un año tiene 24 quincenas
    factor = 24
elif contract.schedule_pay == 'weekly':
    # un año tiene 48 semanas
    factor = 48
else:
    # si no se conoce el sistema de pago, no tomar en cuenta esta regla.
    result = False

# 76652.00 + el 25% del excedente de restar 833171.01
result = 76652.00 + ((((categories.GROSS - categories.RETRIBD )*factor) - 833171.01) * 0.25) / fact
",,,,contract.wage,,,"Impuesto sobre la renta",,,,__export__.hr_salary_rule_10,14,"Código python",base.user_root,"2015-03-03 02:33:12"
"__export__.hr_salary_rule_18","True","True","1.0","__export__.hr_salary_rule_category_9","base.main_company","Siempre verdadero"," # Available variables: #---------------------- # payslip: object containing the payslips # employee: hr.employee object # contract: hr.contract object # rules: object containing the rules code (previously computed) # categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category). # worked_days: object containing the computed worked days # inputs: object containing the computed inputs  # Note: returned value have to be set in the variable 'result'  result = rules.NET > categories.NET * 0.10","2015-03-02 00:43:35","base.user_root","","","","HED1","","result = (((contract.wage / 23.83) / 8) * 1.35) * inputs.HED1.amount ","","","","contract.wage","","","Horas extra 35%","","","","__export__.hr_salary_rule_11","5","Importe fijo","base.user_root","2015-03-02 02:16:29"
"__export__.hr_salary_rule_19","True","True","1.0","__export__.hr_salary_rule_category_9","base.main_company","Siempre verdadero"," # Available variables: #---------------------- # payslip: object containing the payslips # employee: hr.employee object # contract: hr.contract object # rules: object containing the rules code (previously computed) # categories: object containing the computed salary rule categories (sum of amount of all rules belonging to that category). # worked_days: object containing the computed worked days # inputs: object containing the computed inputs  # Note: returned value have to be set in the variable 'result'  result = rules.NET > categories.NET * 0.10","2015-03-02 00:46:34","base.user_root","","","","HED2","","result = (((contract.wage / 23.83) /8) * 2) * inputs.HED2.amount ","","","","contract.wage","","","Horas extras al 100%","","","","__export__.hr_salary_rule_11","5","Importe fijo","base.user_root","2015-03-02 02:16:29"